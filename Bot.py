import os
import requests
import telebot
import time

from telebot.util import quick_markup
from background import keep_alive
from telebot import types

BOT_TOKEN = "6754268225:AAFN5qOtXqjMemojBbY0pIHhzJWc1AH1fCI" # –ó–∞–º—ñ–Ω—ñ—Ç—å —Ü–µ —Å–≤–æ—ó–º —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)



quick_genaratus = 2
genaratus = 5
phone_number = None
myid = [6133407632]
numbon = 0
illo = 0
keys = ["sk-ZgidcvpxBVa55uaIpKunOt13YXNFw6q2jnpbKRFlZUwyNbB6","sk-5gFDGrO5BlG0czCBySy7bEKqd6V5vVs5lgNWD3OfK0smjIGf","sk-OXEHIC5WhhAhzDzpaFjDxD0j64V0nFA6ZX1yhvarS4Jblo2J","sk-4y5i5B53VRs9jV4gMc86X8vtUQu3LaIlhIii1GFJFFAvjzkE","sk-mDwdWJG4KEiMHZioSPJtqR36gkRAtaIBHYOfVgmtl3IqGGGJ","sk-GWLEuuG9bkwMetggsuxQvZWwgxDvBWWMsJYZF9pr2SVZ4iep","sk-9WBACQuRibyvYFTlKqEKBdglNd4Ti0dzbxy99u6SHvK4pdjW","sk-PYHffx0JIe2EM75GH2zax6mU5RYb3uz9bjCLdMa86Rbh1PiY","sk-gy3ufunqVTF6TVssRpYjUyop3N0phIBrreGBnt8oEANiW9Dt","sk-INTOAi19LNZ3lpLoIfudOuH5rrct3vsOuKaqExQDnW9H1VoZ","sk-FVlWPqufhMgRN3WzTZoCXKi4IybQrOrIv9YLqX8CMBCoT7lM","sk-WgdoQyjywKeNK1pRQf02FT7AdxqsJiYOGiq3cQn5WxwBvOX2","sk-QCVQ0PVYCbXwEsvGCDqxpjovpBNrHCX3aa8ZPpN2esKTYWue","sk-HLf4j5gLaFDbKRsCAhs0EZT1XZxzJcJJAXgWfoOZe0Byrk0B","sk-t9buh9V5u0lhaWyiugJBRltcEYJnjWZHh9129plouJBwOViQ","sk-nPQfH9RsXvylgwGPH1utUoDfmdJ3xuW7vf9G5n9q3x3VMnHk","sk-1a0qO9YN0EMoIHqS943Z5X2qooyIM3ztqtaFN1oVzQNJzJYX","sk-7wBFp3o5bkfvOXmQDDBo18iXDLtfFplVEplsFUsLvS3tKOe2","sk-9S3eJoU78CwPW74BBaSeJzmeZf9QOEHmCKLSGvXoOcV2u6KK","sk-8aEWXvsOeIUmTZXDO6vzKl6lllbQc6De2iAxPoQyw1M7BCLG","sk-3jEtVIxy83PZdYCcg4eYOVO3ide53A7KJQDYWpHSebW6YDnl","sk-PBhcupWfxvs6gEUZz77wKnpXmrJ7gXvAton47CqCh3GaiMwd","sk-sXIgnZh5TZoQ8U0QKTNNfboXL3Vq3zwtFgTCUFGC5CIq2rvI","sk-LivdKXpYUX24ig48kaY0ZL3RYa54TOlSpp7LQPWZxxn21OzS","sk-5AFzY3keaHV8RaauJbZGunlCdeLT295Z0subZNpz0o0fD0e3"]
keycode = "sk-mNRJtuyJfNut85dZCptVBgYqn4SoPHYtJ1Hp6WpuGrKizOLR"
startuser = []
addpromocodesss = ""
usernameid = ""


# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
generations = {}
quick_generations = {}
@bot.message_handler(commands=['gen'])
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
def generate_image(message):
    global quick_genaratus
    global genaratus
    user_id = message.from_user.id
    user_d = message.chat.id
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–≤–æ—Ö –∫–Ω–æ–ø–æ–∫
    button_1 = types.KeyboardButton("–ü–æ–≤—ñ–ª—å–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è")
    button_2 = types.KeyboardButton("–®–≤–∏–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è")

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –¥–≤–æ–º–∞ —Ä—è–¥–∞–º–∏
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    keyboard.add(button_1, button_2)

    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–≤–æ–º–∞ –∫–Ω–æ–ø–∫–∞–º–∏
    if user_id in all_users:
      bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å —è–∫—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏üëá", reply_markup=keyboard)
    elif user_d not in all_users:
        # –ó–∞–ø–∏—Å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ñ–∞–π–ª
        with open("users.txt", "a") as f:
            f.write(f"{user_id}\n")

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É
        all_users.append(user_id)
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å —è–∫—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏üëá", reply_markup=keyboard)
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_id not in generations:
        generations[user_id] = genaratus
        quick_generations[user_id] = quick_genaratus



# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda message: message.text in ["–®–≤–∏–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è", "–ü–æ–≤—ñ–ª—å–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è"])
def handle_buttons(message):
    user_id = message.from_user.id
    user_d = message.chat.id
    if user_id in all_users:
      if message.text == "–®–≤–∏–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è":
          # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
          keyboard_remove = types.ReplyKeyboardRemove()
          bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—óüëá", reply_markup=keyboard_remove)
          bot.register_next_step_handler(message, bumon2)
      elif message.text == "–ü–æ–≤—ñ–ª—å–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è":
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        keyboard_remove = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—óüëá", reply_markup=keyboard_remove)
        bot.register_next_step_handler(message, bumon1)
    elif user_d not in all_users:
    # –ó–∞–ø–∏—Å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ñ–∞–π–ª
      with open("users.txt", "a") as f:
        f.write(f"{user_id}\n")
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É
      all_users.append(user_id)
      handle_buttons(message)


def bumon1 (message):
   prompt = message.text
   user_id = message.from_user.id
  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–∏—à–∫—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π
   if user_id not in generations:
      generations[user_id] = genaratus
   genenenenenenra = int(generations[user_id])
   if genenenenenenra <= 0:
      bot.send_message(message.chat.id, "–í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ –≤—Å—ñ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–∞ –¥–µ–Ω—å.")
      return
   bot.send_message(message.chat.id, "üí§–ü–æ—á–∞–ª–∞—Å—å –ø–æ–≤—ñ–ª—å–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è, –∑–∞–∑–≤–∏—á–∞–π –≤–æ–Ω–∞ —Ç—Ä–∏–≤–∞—î –¥–æ 5 —Ö–≤–∏–ª–∏–Ω")
   user_id = message.chat.id
   from easygoogletranslate import EasyGoogleTranslate
   translator = EasyGoogleTranslate()
   resut = translator.translate(prompt, target_language='en')
   prompt = resut
   try:
          time.sleep(100)
          global keycode
          global illo
          global numbon
          illo+=1
          if illo == 8:
              numbon+=1
              keycode = keys[numbon]
              illo = 0
              print("keycode:", keycode)

          response = requests.post(
          f"https://api.stability.ai/v2beta/stable-image/generate/core",
          headers={
              "authorization": keycode,
              "accept": "image/*"
          },
          files={
              "none": ''
          },
          data={
              "prompt": prompt,
              "output_format": "webp",
          },
      )

          if response.status_code == 200:
              with open("./lighthouse.webp", 'wb') as file:
                  file.write(response.content)
          else:
              raise Exception(str(response.json()))
          url = open('./lighthouse.webp', 'rb')
     # –í–∏–¥–∞–ª—ñ—Ç—å –æ—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –≤–∞—à –±–æ—Ç –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É —á–∞—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          bot.send_photo(message.chat.id, url, caption=f"üí¨–ü—Ä–æ–º—Ç:` {prompt}\n`\nüí∞–£ –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—è ***{generations[user_id] - 1}*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")
          generations[user_id] -= 1
   except:
     bot.send_message(message.chat.id, "–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –º–æ–∂–ª–∏–≤–æ –≤–∞—à –ø—Ä–æ–º—Ç –ø–æ—Ä—É—à—É—î –Ω–∞—à—ñ –ø—Ä–∞–≤–∏–ª–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–æ–º—Ç —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n\n–Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏–ª–∞—Å—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω–∞: @RubiGenSupport.")
  # –ó–º–µ–Ω—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π





def bumon2 (message):
  prompt = message.text
  user_id = message.from_user.id
  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–∏—à–∫—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π
  if user_id not in quick_generations:
    quick_generations[user_id] = quick_genaratus
  genereteoese = int(quick_generations[user_id])
  if genereteoese <= 0:
      bot.send_message(message.chat.id, "–í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ –≤—Å—ñ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–∞ –¥–µ–Ω—å.")
      return
  bot.send_message(message.chat.id, "üí®–ü–æ—á–∞–ª–∞—Å—å —à–≤–∏–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è, –∑–∞–∑–≤–∏—á–∞–π –≤–æ–Ω–∞ —Ç—Ä–∏–≤–∞—î –¥–æ 2 —Ö–≤–∏–ª–∏–Ω")

  # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  from easygoogletranslate import EasyGoogleTranslate
  translator = EasyGoogleTranslate()
  resut = translator.translate(prompt, target_language='en')

  prompt = resut

# Output: Bu bir √∂rnektir.
  try:
        time.sleep(35)
        global keycode
        global illo
        global numbon
        illo+=1
        if illo == 8:
            numbon+=1
            keycode = keys[numbon]
            illo = 0
            print("keycode:", keycode)

        response = requests.post(
        f"https://api.stability.ai/v2beta/stable-image/generate/core",
        headers={
            "authorization": keycode,
            "accept": "image/*"
        },
        files={
            "none": ''
        },
        data={
            "prompt": prompt,
            "output_format": "webp",
        },
    )

        if response.status_code == 200:
            with open("./lighthouse.webp", 'wb') as file:
                file.write(response.content)
        else:
            raise Exception(str(response.json()))
        url = open('./lighthouse.webp', 'rb')
        bot.send_photo(message.chat.id, url, caption=f"üí¨–ü—Ä–æ–º—Ç:` {prompt}\n`\nüí∞–£ –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—è ***{quick_generations[user_id] - 1}*** —à–≤–∏–¥–∫–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")
        quick_generations[user_id] -= 1
  except:
                  bot.send_message(message.chat.id, "–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –º–æ–∂–ª–∏–≤–æ –≤–∞—à –ø—Ä–æ–º—Ç –ø–æ—Ä—É—à—É—î –Ω–∞—à—ñ –ø—Ä–∞–≤–∏–ª–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–æ–º—Ç —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n\n–Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏–ª–∞—Å—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω–∞: @RubiGenSupport.")








def help(message):
  bot.send_message(message.chat.id, "–Ø RubiGen, –º–æ–∂—É –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ —ó—Ö –æ–ø–∏—Å—É.\n\n–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –ö–∞–Ω–∞–ª RubiGen: @RubiGenChanel.\n–ß–∞—Ç RubiGen: @RubiGenChat - –¢–∞–º —Ä–æ–∑–¥–∞—é—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥–∏ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∑–æ–±—Ä–∞–∂–µ–Ω—å.\n\n–ö–æ–º–∞–Ω–¥–∏:\n/buy - ‚ù§–ö—É–ø–∏—Ç–∏ Premium –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –±–æ—Ç–∞ RubiGen‚ù§\n/gen - –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n/help - –î–æ–ø–æ–º–æ–≥–∞ —Ç–∞ –∫–æ–º–∞–Ω–¥–∏.\n/balance - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å.\n/promo - –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥.\n/promter - (BETA) –ü–æ–∫—Ä–∞—â–∏–∏—Ç–∏ –ø—Ä–æ–º—Ç –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é PROmter.\n/ref - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–∏—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.\n\n–ó–∞ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ —Ç–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –∞–¥–º—ñ–Ω–∞: @RubiGenSupport.\n")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–∏—à–∫—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π
def check_generations(message):
    user_id = message.from_user.id

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_id not in generations:
        generations[user_id] = genaratus
        quick_generations[user_id] = quick_genaratus

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ª–∏—à–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π
    bot.send_message(message.chat.id, f"üí∞–ù–∞—Ä–∞–∑—ñ —É –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ:\n\nüí®–®–≤–∏–¥–∫–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π: ***{quick_generations[user_id]}***\nüí§–ü–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π: ***{generations[user_id]}***", parse_mode="Markdown")

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
bot.register_message_handler(check_generations, commands=['balance'])
bot.register_message_handler(help, commands=['help'])

all_users = []


@bot.message_handler(commands=['send'])
def send_m(message):
  if message.chat.id == 6133407632:
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:")
    bot.register_next_step_handler(message, send_message_to_users)
  else:
    bot.send_message(message.chat.id, "Error: you not admin")
def send_message_to_users(message):
    message_text = message.text
    for user_id in all_users:
      bot.send_message(user_id, message_text)




@bot.message_handler(commands=['add'])
def add_api_key(message):
  if message.chat.id == 6133407632:
    global keys
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á:")
    bot.register_next_step_handler(message, add_key)
  else:
    return

def add_key(message):
    global numbon
    global keys
    key = message.text
    keys.append(key)
    bot.send_message(message.chat.id, f"–ö–ª—é—á –¥–æ–¥–∞–Ω–æ.\n\n–£ –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—å {numbon} –ø—Ä–∞—Ü—é—é—á–∏—Ö –∫–ª—é—á—ñ–≤\n\n\n–ö–ª—é—á—ñ:\n" + "\n".join(keys))





# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤
promocodes = []

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤
activated_promocodes = {}

@bot.message_handler(commands=["promo"])
def promo_handler(message: types.Message):
  global quick_genaratus
  global genaratus
  user_id = message.chat.id
  if quick_generations[user_id] > quick_genaratus:
    if generations[user_id] > genaratus:
      bot.send_message(message.chat.id, f"–í–∏ –Ω–µ –º–æ–∂–∏—Ç–µ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –Ω—ñ—è–∫—ñ –ø—Ä–æ–º–æ–∫–æ–¥–∏, —Ç–æ–º—É —â–æ: –ø—Ä–æ–º–æ–∫–æ–¥–∏ –≤—ñ–¥–Ω–æ–≤–ª—é—é—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω—å, –∞ —É –≤–∞—Å –Ω–∞—Ä–∞–∑—ñ –±—ñ–ª—å—à–µ –Ω—ñ–∂ ***{genaratus}*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö —Ç–∞ ***{quick_genaratus}*** —à–≤–∏–¥–∫–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")
      return
    try:
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      text = message.text.split(' ')[1]
    except:
      bot.send_message(message.chat.id, "–í–≤–æ–¥—å—Ç–µ –≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ: \n/promo code, –Ω–∞ –º—ñ—Å—Ç—ñ \"code\" –≤—Å—Ç–∞–≤—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥.")
      return
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–∫—Ç–∏–≤—É–≤–∞–≤ –ø—Ä–æ–º–æ–∫–æ–¥
    if text in activated_promocodes.get(user_id, []):
        bot.send_message(message.chat.id, "–í–∏ –≤–∂–µ –∞–∫—Ç–∏–≤—É–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥.")
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–≤–µ–¥–µ–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥ –¥—ñ–π—Å–Ω–∏–π
    if text not in promocodes:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥.")
        return

    # –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –ø—Ä–æ–º–æ–∫–æ–¥—É
    activated_promocodes.setdefault(user_id, []).append(text)
    bot.send_message(message.chat.id, "–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!")
    generations[user_id] = genaratus
    quick_generations[user_id] = quick_genaratus

    # –î–æ–¥–∞–π—Ç–µ –∫–æ–¥ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥—ñ—ó –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø—Ä–æ–º–æ–∫–æ–¥—É,
    # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞–¥–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏, –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É —Ç–æ—â–æ.
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥–∏ start




addpromocodesss = ""


@bot.message_handler(commands=['addpromo'])
def naigfd(message):
  if message.chat.id == 6133407632:
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –ø—Ä–æ–º–æ–∫–æ–¥:")
    bot.register_next_step_handler(message, send_messall)
  else:
    bot.send_message(message.chat.id, "Error: you not admin")
def send_messall(message):
  global addpromocodesss
  addpromocodesss = message.text
  bot.send_message(message.chat.id, "–ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–¥–∞–Ω–æ")
  promocodes.append(addpromocodesss)



userbuyid = ""
usertelegids = []


@bot.message_handler(commands=['buy'])
def add_buy_user(message):
    global usertelegids
    user_d = message.chat.id
    if user_d == 6133407632:
      bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º id –Ω–æ–≤–æ–≥–æ premium –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
      bot.register_next_step_handler(message, next_add_buy)
    else:
        bot.send_message(message.chat.id, f"Premium –ø—ñ–¥–ø–∏—Å–∫–∞ RubiGen Basic - –í–∫–ª—é—á–∞—î –≤ —Å–µ–±–µ ***50*** —à–≤–∏–¥–∫–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π, ***100*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö —Ç–∞ –≤–µ–ª–∏–∫—É –Ω–∞—à—É –ø–æ–¥—è–∫—É.\n\n–©–æ–± –∫—É–ø–∏—Ç–∏ Premium –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ 100–≥—Ä–Ω –Ω–∞ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏: `5375414122338071`\n–ó –æ—Å—å —Ç–∞–∫–∏–º –æ–ø–∏—Å–æ–º: `–û–ø–ª–∞—Ç–∞ –∑–∞ Premium Basic: {message.chat.id}`\n\n–ü—ñ—Å–ª—è –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏ –≤–∞–º –ø—Ä–∏–π–¥–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.\n\n–Ø–∫—â–æ –≤–∏ —á–µ—Ä–µ–∑ 24 –≥–æ–¥–∏–Ω–∏ –≤–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –æ–¥–æ–±—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É —Ç–æ–¥—ñ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω–∞: @RubiGenSupport.", parse_mode="Markdown")

def next_add_buy (message):
  global usertelegids
  global userbuyid
  userbuyid = message.text
  usertelegids.append(userbuyid)
  bot.send_message(message.chat.id, f"Premium –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º id: `{userbuyid}` –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.", parse_mode="Markdown")
  try:
    typeint = int(userbuyid)
    generations[typeint] = 100
    quick_generations[typeint] = 50
    bot.send_message(userbuyid, f"üéâ–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ!\n\nüí¨–í–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ: ***{quick_generations[typeint]}*** –®–í–ò–î–ö–ò–• –¢–ê ***{generations[typeint]}*** –ü–û–í–Ü–õ–¨–ù–ò–• –ì–ï–ù–ï–†–ê–¶–Ü–ôüí¨\n\n‚ô•Ô∏è–î—è–∫—É—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—å –Ω–∞—à–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º‚ô•Ô∏è", parse_mode="Markdown")
  except:
    bot.send_message(message.chat.id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º id: `{userbuyid}`, –Ω–µ–º–∞—î –∞–±–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ù–ï –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞.", parse_mode="Markdown")


@bot.message_handler(commands=["ref"])
def send_refrence(message):
    bot.send_message(message.chat.id, f"üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞:\n\nüí° –¢–≤–æ—ó–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º –≤–≤–∞–∂–∞—î—Ç—å—Å—è –±—É–¥—å-—è–∫–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, —è–∫–∏–π —É–ø–µ—Ä—à–µ –ø–æ—Ç—Ä–∞–ø–∏–≤ —É —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è.\n\nüîó–í–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: `https://t.me/imagenerabot?start={message.chat.id}`\n\n–ó–∞ –∫–æ–∂–Ω—É –ª—é–¥–∏–Ω—É —è–∫–∞ –ø—Ä–∏—î–¥–Ω–∞—î—Ç—å—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ –ø–æ –≤–∞—à–æ–º—É –ø–æ—Å–∏–ª–∞–Ω—é, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ ***5*** —à–≤–∏–¥–∫–∏—Ö —Ç–∞ ***10*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")

@bot.message_handler(commands=["start"])
def send_awesome(message):
  user_d = message.chat.id
  user_id = message.from_user.id
  try:
    text = message.text.split(' ')[1]
  except:
    if user_id in all_users:
      bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
    elif user_d not in all_users:
        # –ó–∞–ø–∏—Å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ñ–∞–π–ª
        with open("users.txt", "a") as f:
            f.write(f"{user_id}\n")

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É
        all_users.append(user_id)
        bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_id not in generations:
        generations[user_id] = genaratus
        quick_generations[user_id] = quick_genaratus
    return
  idus = f"{message.chat.id}"
  if idus == text:
    bot.send_message(message.chat.id, "–¶–µ –≤–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –π–æ–≥–æ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏!")
    all_users.append(user_id)
    return

  else:
    if user_id in all_users:
      bot.send_message(message.chat.id, "–í–∏ –≤–∂–µ —î –Ω–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —ñ–Ω—à–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!")
      all_users.append(user_id)
    else:
      try: 
        bot.send_message(text, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ–π—à–æ–≤ –ø–æ –≤–∞—à–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é, –≤–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ ***5*** —à–≤–∏–¥–∫–∏—Ö —Ç–∞ ***10*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")
        typeint = int(text)
        generations[typeint] = 10
        quick_generations[typeint] = 5
        bot.send_message(message.chat.id, "–í–∏ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–∞–ª–∏ —Ä–µ—Ñ–∏—Ä–∞–ª–æ–º —Å—Ç–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º, –¥—è–∫—É—î–º–æ –≤–∞–º.")
        if user_id in all_users:
          bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
        elif user_d not in all_users:
            # –ó–∞–ø–∏—Å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ñ–∞–π–ª
            with open("users.txt", "a") as f:
                f.write(f"{user_id}\n")

            # –î–æ–¥–∞–≤–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É
            all_users.append(user_id)
            bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user_id not in generations:
            generations[user_id] = genaratus
            quick_generations[user_id] = quick_genaratus
        
      except:
        if user_id in all_users:
          bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
        elif user_d not in all_users:
            # –ó–∞–ø–∏—Å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ñ–∞–π–ª
            with open("users.txt", "a") as f:
                f.write(f"{user_id}\n")

            # –î–æ–¥–∞–≤–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É
            all_users.append(user_id)
            bot.reply_to(message, f"–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É RubiGen —è–∫–∏–π –º–æ–∂–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.\n–£ –≤–∞—Å {quick_genaratus} —à–≤–∏–¥–∫—ñ—Å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π —Ç–∞ {genaratus} –ø–æ–≤—ñ–ª—å–Ω–∏—Ö.\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—è –±—É–¥—å –ª–∞—Å–∫–∞ –¥–æ –Ω–∞—à–æ–≥–æ <a href=\"https://t.me/RubiGenChat\">—á–∞—Ç—É</a> —Ç–∞ <a href=\"https://t.me/RubiGenChanel\">–∫–∞–Ω–∞–ª—É</a>.\n–ê –ø–æ—Ç—ñ–º –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help.", parse_mode="HTML")
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user_id not in generations:
            generations[user_id] = genaratus
            quick_generations[user_id] = quick_genaratus





    # –î–æ–¥–∞–π—Ç–µ –∫–æ–¥ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥—ñ—ó –ø—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø—Ä–æ–º–æ–∫–æ–¥—É,
    # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞–¥–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏, –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É —Ç–æ—â–æ.
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥–∏ start






dobre_id = 0
kilkist_povilnogo_dobra_generatus = 0
kilkist_shvidkogo_dobra_generatus = 0

@bot.message_handler(commands=['free'])
def nashe_dobro_povertaitsya(message):
    global usertelegids
    user_d = message.chat.id
    if user_d == 6133407632:
      bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —è–∫–æ–º—É —Ö–æ—á–µ—Ç–µ –Ω–∞–¥–∞—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó:")
      bot.register_next_step_handler(message, add_id_dobro)


def add_id_dobro(message):
  global dobre_id
  dobre_id = message.text
  bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Å–∫—ñ–ª—å–∫–∏ –®–í–ò–î–ö–ò–• –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π –≤–∏ —Ö–æ—á–µ—Ç–µ –Ω–∞–¥–∞—Ç–∏ —Ü—å–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É:")
  bot.register_next_step_handler(message, add_genaratus_dobro_1)


def add_genaratus_dobro_1(message):
  global kilkist_shvidkogo_dobra_generatus
  kilkist_shvidkogo_dobra_generatus = message.text
  bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Å–∫—ñ–ª—å–∫–∏ –ü–û–í–Ü–õ–ù–ò–• –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π –≤–∏ —Ö–æ—á–µ—Ç–µ –Ω–∞–¥–∞—Ç–∏ —Ü—å–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É:")
  bot.register_next_step_handler(message, add_genaratus_dobro)

def add_genaratus_dobro(message):
  kilkist_povilnogo_dobra_generatus = message.text
  try:
    inttype = int(dobre_id)
    bot.send_message(dobre_id, f"üéâ–í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ ***{kilkist_shvidkogo_dobra_generatus}*** —à–≤–∏–¥–∫–∏—Ö —Ç–∞ ***{kilkist_povilnogo_dobra_generatus}*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–πüéâ", parse_mode="Markdown")
    bot.send_message(message.chat.id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–∞–¥–∞–Ω–æ ***{kilkist_shvidkogo_dobra_generatus}*** —à–≤–∏–¥–∫–∏—Ö —Ç–∞ ***{kilkist_povilnogo_dobra_generatus}*** –ø–æ–≤—ñ–ª—å–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü—ñ–π.", parse_mode="Markdown")
    generations[inttype] = kilkist_povilnogo_dobra_generatus
    quick_generations[inttype] = kilkist_shvidkogo_dobra_generatus
  except:
    inttype = int(dobre_id)
    bot.send_message(message.chat.id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º id: `{inttype}`, –Ω–µ–º–∞—î –∞–±–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ù–ï –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞.", parse_mode="Markdown")





@bot.message_handler(commands=['promter'])
def beta_promter(message):
  bot.send_message(message.chat.id, "‚Äº–£–≤–∞–≥–∞‚Äº\n–ù–∞—Ä–∞–∑—ñ ***PROmter*** —Ü–µ ***BETA*** –≤–µ—Ä—Å—ñ—è, —ñ–Ω–æ–¥—ñ –º–æ–∂–µ –¥–∞–≤–∞—Ç–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏!\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ø—Ä–æ–º—Ç –±—É–¥—å —è–∫–æ—é –º–æ–≤–æ—é, –∞ —è —Å–ø—Ä–æ–±—É—é –π–æ–≥–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏üëá", parse_mode="Markdown")
  bot.register_next_step_handler(message, promter)
def promter(message):
  chat_text = message.text
  bot.send_message(message.chat.id, "PROmter –∑–∞—Ä–∞–∑ –∑–∞–π–º–∞—î—Ç—å—Å—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è–º –≤–∞—à–æ–≥–æ –ø—Ä–æ–º—Ç—É, –∑–∞–∑–≤–∏—á–∞–π —Ü–µ —Ç—Ä–∏–≤–∞—î –¥–æ 35 —Å–µ–∫—É–Ω–¥.")
  from easygoogletranslate import EasyGoogleTranslate
  translator = EasyGoogleTranslate()
  resut = translator.translate(chat_text, target_language='en')

  chat_text = resut
  from gradio_client import Client
  client = Client("Qwen/Qwen1.5-32B-Chat-demo")
  result = client.predict(
   query=chat_text,
   history=[],
   system="Enhance the prompt provided by the user for generating images, adding more details and improving it. Return only the improved prompt without any unnecessary words or punctuation marks.",
   api_name="/model_chat"
  )

  # –í–∏–≤–æ–¥–∏—Ç–∏ –ª–∏—à–µ –¥—Ä—É–≥–µ –∑–Ω–∞—á–µ–Ω–Ω—è (—Ä–µ–ø–ª—ñ–∫—É –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞)
  writed_prompt = result[1][0][1]
  bot.send_message(message.chat.id, f"\****–ü–æ–∫—Ä–∞—â–∞–Ω–Ω–∏–π –ø—Ä–æ–º—Ç***: `{writed_prompt}`\n\n\* - —ñ–Ω–æ–¥—ñ PROmter –º–æ–∂–µ –Ω–∞–≤–ø–∞–∫–∏, –ø–æ–≥—ñ—Ä—à–∏—Ç–∏ –ø—Ä–æ–º—Ç.\n\n\n–ü—Ä–∏—î–¥–Ω–∞–π—Ç–µ—Å—å –¥–æ –∫–∞–Ω–∞–ª—É RubiGen —â–æ–± –±–∞—á–∏—Ç–∏ –±—ñ–ª—å—à–µ –Ω–æ–≤–∏–Ω –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: https://t.me/RubiGenChanel", parse_mode="Markdown")


keep_alive()




while True:
  try:
      bot.polling(none_stop=True)
  except Exception as e:
          bot.send_message(6133407632 ,f"–ü–æ–º–∏–ª–∫–∞: {e}")
          time.sleep(1)

